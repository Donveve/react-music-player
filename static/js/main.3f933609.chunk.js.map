{"version":3,"sources":["assets/demo.mp3","assets/hey.mp3","assets/summer.mp3","components/progressBar.js","components/player.js","index.js"],"names":["module","exports","ProgressBar","props","className","style","width","percentage","tracks","song1","song2","song3","audioCtx","window","AudioContext","webkitAudioContext","audioElement","document","createElement","songIndex","loadSong","song","src","track","createMediaElementSource","gainNode","createGain","connect","destination","Player","useState","playing","setPlaying","setPercentage","volume","setVolume","useEffect","setInterval","percent","currentTime","duration","getPercentage","gain","value","ended","toggle","play","pause","onClick","length","icon","faBackward","color","faPause","faPlay","faForward","type","min","max","step","defaultValue","onChange","e","target","ReactDOM","render","getElementById"],"mappings":"0IAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,yNCW5BC,MARf,SAAqBC,GACjB,OACI,yBAAKC,UAAU,YACX,yBAAKA,UAAU,SAASC,MAAO,CAAEC,MAAM,GAAD,OAAKH,EAAMI,WAAX,UCQ9CC,EAAS,CAACC,IAAOC,IAAOC,KAGtBC,EAAW,IADIC,OAAOC,cAAgBD,OAAOE,oBAE/CC,EAAeC,SAASC,cAAc,SAEtCC,EAAY,EAGhB,SAASC,EAASC,GAChBL,EAAaM,IAAMD,EAHrBD,EAASZ,EAAOW,IAKhB,IAAMI,EAAQX,EAASY,yBAAyBR,GAE1CS,EAAWb,EAASc,aAC1BH,EAAMI,QAAQF,GAAUE,QAAQf,EAASgB,aAyF1BC,MAvFf,WAAmB,IAAD,EACYC,oBAAS,GADrB,mBACXC,EADW,KACFC,EADE,OAEkBF,mBAAS,GAF3B,mBAEXvB,EAFW,KAEC0B,EAFD,OAGUH,mBAAS,GAHnB,mBAGXI,EAHW,KAGHC,EAHG,KAKhBC,qBAAU,WACRC,aAAY,kBAOd,WACE,IAAIC,EAAWtB,EAAauB,YAAcvB,EAAawB,SAAY,IACnEP,EAAcK,GATIG,KAAiB,GACnChB,EAASiB,KAAKC,MAAQT,EAClBlB,EAAa4B,OACfZ,GAAW,KAEZ,CAACE,IAOJ,IAsBMW,EAAS,YACG,IAAZd,GACFC,GAAW,GACXhB,EAAa8B,SAEbd,GAAW,GACXhB,EAAa+B,UAIjB,OACE,6BACE,yBAAK3C,UAAU,QACb,oCAAUe,EAAY,EAAtB,KACA,kBAAC,EAAD,CAAaZ,WAAYA,IACzB,yBAAKH,UAAU,YACb,yBAAKA,UAAU,SAAS4C,QA3Bd,aAChB7B,EAEgB,IACdA,EAAYX,EAAOyC,OAAS,GAE9B7B,EAASZ,EAAOW,IAChBH,EAAa8B,OACbd,GAAW,KAoBH,kBAAC,IAAD,CAAiBkB,KAAMC,IAAYC,MAAM,YAE9B,IAAZrB,EACC,yBAAK3B,UAAU,SAAS4C,QAASH,GAC/B,kBAAC,IAAD,CAAiBK,KAAMG,IAASD,MAAM,WAGxC,yBAAKhD,UAAU,SAAS4C,QAASH,GAC/B,kBAAC,IAAD,CAAiBK,KAAMI,IAAQF,MAAM,WAGzC,yBAAKhD,UAAU,SAAS4C,QAlDd,aAChB7B,EAEgBX,EAAOyC,OAAS,IAC9B9B,EAAY,GAEdC,EAASZ,EAAOW,IAChBH,EAAa8B,OACbd,GAAW,KA2CH,kBAAC,IAAD,CAAiBkB,KAAMK,IAAWH,MAAM,YAG5C,6BACE,2BACEI,KAAK,QACLC,IAAI,IACJC,IAAI,IACJC,KAAK,OACLC,aAAa,IACbC,SAAU,SAAAC,GAAC,OAAI3B,EAAU2B,EAAEC,OAAOpB,cCzG9CqB,IAASC,OAAO,kBAAC,EAAD,MAAYhD,SAASiD,eAAe,W","file":"static/js/main.3f933609.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/demo.bd0a16a6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/hey.21f4f5d2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/summer.fd79b114.mp3\";","import React from 'react'\nimport './_player.scss'\n\nfunction ProgressBar(props) {\n    return (\n        <div className=\"progress\">\n            <div className=\"filler\" style={{ width: `${props.percentage}%` }} />\n        </div>\n    )\n}\n\nexport default ProgressBar","import {\n  faBackward,\n  faForward,\n  faPause,\n  faPlay\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useState } from \"react\";\nimport song1 from \"./../assets/demo.mp3\";\nimport song2 from \"./../assets/hey.mp3\";\nimport song3 from \"./../assets/summer.mp3\";\nimport ProgressBar from \"./progressBar\";\nimport \"./_player.scss\";\n\nvar tracks = [song1, song2, song3];\n\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\nconst audioCtx = new AudioContext();\nvar audioElement = document.createElement(\"audio\");\n\nlet songIndex = 0;\nloadSong(tracks[songIndex]);\n\nfunction loadSong(song) {\n  audioElement.src = song;\n}\nconst track = audioCtx.createMediaElementSource(audioElement);\n\nconst gainNode = audioCtx.createGain();\ntrack.connect(gainNode).connect(audioCtx.destination);\n\nfunction Player() {\n  var [playing, setPlaying] = useState(false);\n  var [percentage, setPercentage] = useState(0);\n  var [volume, setVolume] = useState(1);\n\n  useEffect(() => {\n    setInterval(() => getPercentage(), 1);\n    gainNode.gain.value = volume;\n    if (audioElement.ended) {\n      setPlaying(false);\n    }\n  }, [volume]);\n\n  function getPercentage() {\n    var percent = (audioElement.currentTime / audioElement.duration) * 100;\n    setPercentage(percent);\n  }\n\n  const nextTrack = () => {\n    songIndex++;\n\n    if (songIndex > tracks.length - 1) {\n      songIndex = 0;\n    }\n    loadSong(tracks[songIndex]);\n    audioElement.play();\n    setPlaying(true);\n  };\n\n  const prevTrack = () => {\n    songIndex--;\n\n    if (songIndex < 0) {\n      songIndex = tracks.length - 1;\n    }\n    loadSong(tracks[songIndex]);\n    audioElement.play();\n    setPlaying(true);\n  };\n\n  const toggle = () => {\n    if (playing === false) {\n      setPlaying(true);\n      audioElement.play();\n    } else {\n      setPlaying(false);\n      audioElement.pause();\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"card\">\n        <p>Track {songIndex + 1} </p>\n        <ProgressBar percentage={percentage} />\n        <div className=\"controls\">\n          <div className=\"button\" onClick={prevTrack}>\n            <FontAwesomeIcon icon={faBackward} color=\"white\" />\n          </div>\n          {playing !== false ? (\n            <div className=\"button\" onClick={toggle}>\n              <FontAwesomeIcon icon={faPause} color=\"white\" />\n            </div>\n          ) : (\n            <div className=\"button\" onClick={toggle}>\n              <FontAwesomeIcon icon={faPlay} color=\"white\" />\n            </div>\n          )}\n          <div className=\"button\" onClick={nextTrack}>\n            <FontAwesomeIcon icon={faForward} color=\"white\" />\n          </div>\n        </div>\n        <div>\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"2\"\n            step=\"0.01\"\n            defaultValue=\"1\"\n            onChange={e => setVolume(e.target.value)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Player;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './_index.scss';\nimport Player from \"./components/player\";\n\nReactDOM.render(<Player />, document.getElementById('root'));\n\n"],"sourceRoot":""}